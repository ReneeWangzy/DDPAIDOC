name: Generate PDF Manuals

on:
  workflow_dispatch:
    inputs:
      manual_path:
        description: '指定要生成PDF的手册路径'
        required: true

jobs:
  build-pdfs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          # 安装系统依赖（关键修改：添加中文字体和渲染库）
          sudo apt-get update
          sudo apt-get install -y \
            pandoc \
            libpango-1.0-0 \
            libharfbuzz-dev \
            fonts-noto-cjk
          
          # 安装Python包
          python -m pip install --upgrade pip
          pip install \
            weasyprint==60.1 \
            pandoc-latex-environment
          
          # 验证字体安装
          echo "已安装中文字体："
          fc-list :lang=zh | grep Noto
      
      # 保留您原有的调试步骤
      - name: Debug repository structure
        run: |
          echo "Current working directory: $(pwd)"
          echo "Repository content:"
          ls -la
          echo "Scripts directory:"
          ls -la .github/scripts/ || echo ".github/scripts/ not found"
          echo "Styles directory:"
          ls -la styles/ || echo "styles/ not found"
          echo "Target manual directory:"
          ls -la "${{ github.event.inputs.manual_path }}" || echo "Directory ${{ github.event.inputs.manual_path }} not found"
      
      - name: Create output directory
        run: mkdir -p pdf-output
      
      - name: Verify files
        run: |
          [ -f ".github/scripts/generate_pdf.py" ] || { echo "ERROR: Missing generate_pdf.py"; exit 1; }
          [ -f ".github/styles/default.css" ] || { echo "ERROR: Missing default.css"; exit 1; }
      
      - name: Generate PDF
        env:
          # 关键环境变量（确保找到库和字体）
          FONTCONFIG_PATH: /etc/fonts
          DYLD_FALLBACK_LIBRARY_PATH: /usr/lib/x86_64-linux-gnu/
        run: |
          set -x
          python .github/scripts/generate_pdf.py \
            --dir "${{ github.event.inputs.manual_path }}" \
            --output pdf-output \
            --css .github/styles/default.css \
            --author "Z-Series" \
            --verbose || exit 1
          
          echo "生成结果："
          ls -lh pdf-output/
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf-manual-${{ github.event.inputs.manual_path | tr '/' '-' }}
          path: pdf-output/*.pdf
          retention-days: 30
