name: Generate PDF Manuals

on:
  workflow_dispatch:
    inputs:
      manual_path:
        description: 'Path to the manual directory (e.g., ZSeries/Z60)'
        required: true
        default: 'ZSeries/Z60'

jobs:
  build-pdfs:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pandoc \
            libpango-1.0-0 \
            libharfbuzz-dev \
            fonts-noto-cjk \
            fontconfig
          echo "=== Installed Chinese fonts ==="
          fc-list :lang=zh | grep Noto

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
            weasyprint==58.1 \
            pandoc-latex-environment
          echo "=== Installed packages ==="
          pip list

      - name: Prepare directories
        run: |
          mkdir -p pdf-output
          echo -e 'body {\n  font-family: "Noto Sans CJK SC", sans-serif;\n  font-size: 11pt;\n  line-height: 1.5;\n}\nimg {\n  max-width: 100%;\n  height: auto;\n}' > .github/styles/default.css

      - name: Generate PDF
        id: generate
        env:
          FONTCONFIG_PATH: /etc/fonts
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -ex
          echo "=== Generating PDF ==="
          
          # First try with WeasyPrint
          if python .github/scripts/generate_pdf.py \
            --dir "${{ github.event.inputs.manual_path }}" \
            --output pdf-output \
            --css "$(pwd)/.github/styles/default.css" \
            --root "$(pwd)" \
            --author "Your-Company-Name" \
            --verbose; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            # Fallback to xelatex
            echo "=== Fallback to xelatex ==="
            sudo apt-get install -y texlive-xetex texlive-fonts-recommended
            pandoc "${{ github.event.inputs.manual_path }}/README.md" -o pdf-output/manual.pdf \
              --pdf-engine=xelatex \
              -V mainfont="Noto Sans CJK SC" \
              -V geometry:margin=25mm
            echo "status=fallback" >> $GITHUB_OUTPUT
          fi

      - name: Sanitize artifact name
        id: sanitize-name
        run: |
          SANITIZED_NAME="manual-$(echo '${{ github.event.inputs.manual_path }}' | tr '/' '-')"
          echo "name=$SANITIZED_NAME" >> $GITHUB_OUTPUT
          echo "Generated artifact name: $SANITIZED_NAME"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.sanitize-name.outputs.name }}
          path: pdf-output/*.pdf
          retention-days: 30

      - name: Report status
        run: |
          echo "PDF generation ${{ steps.generate.outputs.status }}"
          if [ "${{ steps.generate.outputs.status }}" == "fallback" ]; then
            echo "::notice::Used xelatex fallback method"
          fi
