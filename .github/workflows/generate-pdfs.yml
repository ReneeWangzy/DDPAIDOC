name: Generate PDF Manuals

on:
  workflow_dispatch:
    inputs:
      manual_path:
        description: 'Path to the manual directory (e.g., docs/user-manual)'
        required: true
        default: 'docs'

jobs:
  build-pdfs:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pandoc \
            libpango-1.0-0 \
            libharfbuzz-dev \
            fonts-noto-cjk \
            fontconfig
          echo "=== Installed Chinese fonts ==="
          fc-list :lang=zh | grep Noto

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install \
            weasyprint==60.1 \
            pandoc-latex-environment
          echo "=== Installed Python packages ==="
          pip list

      - name: Validate inputs
        run: |
          echo "Manual path: ${{ github.event.inputs.manual_path }}"
          if [ ! -d "${{ github.event.inputs.manual_path }}" ]; then
            echo "::error::Directory ${{ github.event.inputs.manual_path }} does not exist"
            ls -la
            exit 1
          fi

      - name: Prepare directories
        run: |
          mkdir -p pdf-output
          mkdir -p .github/styles
          # 使用单行方式写入CSS避免heredoc问题
          echo -e 'body {\n  font-family: "Noto Sans CJK SC", sans-serif;\n  font-size: 11pt;\n  line-height: 1.5;\n  margin: 0 auto;\n  padding: 20px;\n  color: #333;\n}\nh1 { color: #1a73e8; }' > .github/styles/default.css

      - name: Generate PDF
        env:
          FONTCONFIG_PATH: /etc/fonts
          DYLD_FALLBACK_LIBRARY_PATH: /usr/lib/x86_64-linux-gnu/
        run: |
          set -ex
          echo "=== Generating PDF ==="
          python .github/scripts/generate_pdf.py \
            --dir "${{ github.event.inputs.manual_path }}" \
            --output pdf-output \
            --css "$(pwd)/.github/styles/default.css" \
            --author "Your-Company-Name" \
            --verbose

          echo "=== Generated files ==="
          ls -lh pdf-output/

      - name: Sanitize artifact name
        id: artifact-name
        run: |
          SANITIZED_PATH="${INPUT_MANUAL_PATH//\//-}"
          SANITIZED_PATH="${SANITIZED_PATH// /_}"
          echo "name=pdf-manual-${SANITIZED_PATH}" >> $GITHUB_OUTPUT
        env:
          INPUT_MANUAL_PATH: ${{ github.event.inputs.manual_path }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact-name.outputs.name }}
          path: pdf-output/*.pdf
          retention-days: 30

      - name: Success notification
        if: success()
        run: |
          echo "PDF successfully generated: ${{ steps.artifact-name.outputs.name }}.pdf"
          echo "Download URL:"
          echo "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
