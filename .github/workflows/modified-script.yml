name: Modified Script Test
on:
  workflow_dispatch:
  
jobs:
  modified-script:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandoc-latex-environment
          pip install weasyprint
          sudo apt-get update
          sudo apt-get install -y pandoc
      
      - name: Create test directory
        run: |
          mkdir -p test-z60
          echo "# 测试手册" > test-z60/README.md
          echo "[测试章节](test-chapter.md)" >> test-z60/README.md
          echo "# 测试章节" > test-z60/test-chapter.md
          echo "这是一个测试内容。" >> test-z60/test-chapter.md
      
      - name: Create output directory
        run: mkdir -p pdf-output
      
      - name: Create python wrapper file
        run: |
          echo '#!/usr/bin/env python3' > error_wrapper.py
          echo 'import sys' >> error_wrapper.py
          echo 'import subprocess' >> error_wrapper.py
          echo '' >> error_wrapper.py
          echo 'cmd = ["python", ".github/scripts/generate_pdf.py", "--dir", "test-z60", "--output", "pdf-output", "--css", "styles/default.css", "--author", "Z-Series"]' >> error_wrapper.py
          echo 'print("Running command:", " ".join(cmd))' >> error_wrapper.py
          echo 'try:' >> error_wrapper.py
          echo '    result = subprocess.run(cmd, capture_output=True, text=True)' >> error_wrapper.py
          echo '    print("Exit code:", result.returncode)' >> error_wrapper.py
          echo '    print("Output:", result.stdout)' >> error_wrapper.py
          echo '    if result.returncode != 0:' >> error_wrapper.py
          echo '        print("Error:", result.stderr)' >> error_wrapper.py
          echo 'except Exception as e:' >> error_wrapper.py
          echo '    print("Exception:", str(e))' >> error_wrapper.py
          echo '# Always exit successfully' >> error_wrapper.py
          echo 'sys.exit(0)' >> error_wrapper.py
      
      - name: Run wrapper
        run: python error_wrapper.py
      
      - name: Try direct run with error catching
        run: |
          python .github/scripts/generate_pdf.py --dir test-z60 --output pdf-output --css styles/default.css --author "Z-Series" || echo "Script failed but continuing"
      
      - name: Check output directory
        run: |
          echo "Output directory content:"
          ls -la pdf-output/ || echo "No output directory"
      
      - name: Upload any generated files
        uses: actions/upload-artifact@v4
        with:
          name: modified-script-output
          path: pdf-output/
          if-no-files-found: warn
