name: Generate PDF Manuals
on:
  workflow_dispatch:
    inputs:
      manual_path:
        description: '指定要生成PDF的手册路径'
        required: true

jobs:
  build-pdfs:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install system dependencies (修复版)
        run: |
          # 1. 更新软件源
          sudo apt-get update -y
          
          # 2. 安装基础依赖（Ubuntu 22.04兼容版本）
          sudo apt-get install -y \
            fonts-noto \                   # 基础字体包
            fonts-noto-cjk \               # 中日韩字体
            fonts-noto-extra \             # 替代原来的fonts-noto-core
            pandoc \
            texlive-xelatex \
            texlive-fonts-recommended \
            python3-pip \
            python3-venv
          
          # 3. 验证字体安装
          echo "=== 已安装中文字体 ==="
          fc-list :lang=zh | grep "Noto" || echo "警告：未检测到中文字体"
      
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install \
            pandoc-latex-environment \
            weasyprint==58.1 \            # 固定稳定版本
            pygments
      
      - name: Debug repository structure
        run: |
          echo "Current working directory: $(pwd)"
          echo "Repository content:"
          ls -la
          echo "Scripts directory:"
          ls -la .github/scripts/ || echo ".github/scripts/ not found"
          echo "Styles directory:"
          ls -la styles/ || echo "styles/ not found"
          echo "Target manual directory:"
          ls -la "${{ github.event.inputs.manual_path }}" || echo "Directory ${{ github.event.inputs.manual_path }} not found"
      
      - name: Create output directory
        run: mkdir -p pdf-output
      
      - name: Verify Python script existence
        run: |
          if [ -f ".github/scripts/generate_pdf.py" ]; then
            echo "Python script exists"
            head -n 20 .github/scripts/generate_pdf.py
          else
            echo "ERROR: Python script not found at .github/scripts/generate_pdf.py"
            exit 1
          fi
      
      - name: Verify CSS file existence
        run: |
          if [ -f ".github/styles/default.css" ]; then
            echo "CSS file exists"
            head -n 10 .github/styles/default.css
          else
            echo "ERROR: CSS file not found at styles/default.css"
            exit 1
          fi
      
      - name: Test Python script
        run: |
          python .github/scripts/generate_pdf.py --help || echo "Script returned error when running --help"
      
      - name: Generate PDF with verbose output
        run: |
          set -x  # 开启详细日志
          
          # 生成测试PDF验证中文支持
          echo '<!DOCTYPE html><html><body><p>中文测试：产品外观</p></body></html>' > chinese-test.html
          python -m weasyprint chinese-test.html chinese-test.pdf
          ls -la chinese-test.pdf
          
          # 正式生成PDF
          python .github/scripts/generate_pdf.py \
            --dir "${{ github.event.inputs.manual_path }}" \
            --output pdf-output \
            --css .github/styles/default.css \
            --author "Z-Series" \
            --verbose || {
              echo "PDF生成失败，退出码：$?"
              ls -la pdf-output/
              exit 1
            }
          
          echo "生成的PDF文件："
          ls -la pdf-output/
      
      - name: Set artifact_name
        run: |
          # 安全处理路径名称（替换特殊字符）
          safe_name=$(basename "${{ github.event.inputs.manual_path }}" | tr -d '/\\:*?"<>|' | tr ' ' '_')
          echo "ARTIFACT_NAME=pdf-manual-${safe_name}" >> $GITHUB_ENV
          echo "生成的产物名称：${ARTIFACT_NAME}"
      
      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: pdf-output/*.pdf
          retention-days: 30
